// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  phone    String
  password String
  cpf      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account   Account? @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId String?   @unique
}

model Account {
  id           String   @id @default(uuid())
  currentValue Decimal
  currency     Currency @default(BR)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  transations Transaction[]
  user        User?         @relation
}

model Transaction {
  id          String          @id @default(uuid())
  value       Decimal
  type        TransactionType @default(output)
  destination String
  description String

  createdAt DateTime @default(now())

  accountId String
  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model Category{
  id String @id @default(uuid())
  name String

  transactions Transaction[]
}

enum TransactionType {
  input
  output
}

enum Currency {
  BR
  USS
}
