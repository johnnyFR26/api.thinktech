# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Account {
  createdAt: DateTimeISO!
  currency: Currency!
  currentValue: Float!
  id: ID!
  transactions: [Transaction!]!
  updatedAt: DateTimeISO!
  user: User
}

input CreateUserInput {
  cpf: String!
  email: String!
  name: String!
  password: String!
  phone: String!
}

"""Defines the currency type"""
enum Currency {
  BRL
  USS
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Mutation {
  createUser(data: CreateUserInput!): User!
  deleteUser(id: Float!): User!
}

type Query {
  getUser(id: Float!): User!
  getUsers: [User!]!
}

type Transaction {
  account: Account!
  createdAt: DateTimeISO!
  description: String!
  destination: String!
  id: ID!
  type: TransactionType!
  value: Float!
}

"""Defines whether the transaction is an input or an output"""
enum TransactionType {
  INPUT
  OUTPUT
}

type User {
  account: Account
  cpf: String!
  createdAt: DateTimeISO!
  email: String!
  id: ID!
  name: String!
  password: String!
  phone: String!
  updatedAt: DateTimeISO!
}